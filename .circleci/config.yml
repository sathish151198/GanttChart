version: 2.1
parameters:
  buildType:
    type: string
    default: ''
  buildEnvironment:
    type: string
    default: ''
  mockLicense:
    type: string
    default: ''
  createTemplate:
    type: string
    default: ''
  serviceUrl:
    type: string
    default: ''
  tenantId:
      type: string
      default: ""
  privateKey:
      type: string
      default: ""
  publicKey:
      type: string
      default: ""
  iconType:
      type: string
      default: ""
  displayName:
      type: string
      default: ""
  emailTo:
    type: string
    default: ''
jobs:
  build:
    docker:
      - image: circleci/node:14-browsers
    environment:
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - checkout # When a push or pull request is merged, CI/CD pipeline is triggered and it gets latest code from the repo using git fetch/pull
      - run:
          name: Authenticate npm
          command: |
            if [ -f ".npmrc" ]
            then
              rm .npmrc
            fi
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
      - run:
          name: Install dependancy packages
          command: |
            npm install --legacy-peer-deps
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "sathishkumarm@lumel.com"
            git config --global user.name "Sathish Kumar"
      - run:
          name: Generate dotenv based on CI job parameters
          command: |
            if [ -f ".env" ]
            then
              rm .env
            fi
            if ! [[ -z "$PUBLIC_KEY" ]]
            then
              echo "PUBLIC_KEY=$PUBLIC_KEY" >> .env
            fi
            if ! [[ -z "$SECRET_KEY" ]]
            then
              echo "SECRET_KEY=$SECRET_KEY" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.buildType >>" ]]
            then
              echo "BUILD_TYPE=<< pipeline.parameters.buildType >>" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.buildEnvironment >>" ]]
            then
              echo "BUILD_ENVIRONMENT=<< pipeline.parameters.buildEnvironment >>" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.mockLicense >>" ]]
            then
              echo "MOCK_LICENSE=<< pipeline.parameters.mockLicense >>" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.createTemplate >>" ]]
            then
              echo "CREATE_TEMPLATE=<< pipeline.parameters.createTemplate >>" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.serviceUrl >>" ]]
            then
              echo "SERVICE_URL=<< pipeline.parameters.serviceUrl >>" >> .env
            fi
            if ! [[ -z "<< pipeline.parameters.emailTo >>" ]]
            then
              echo "EMAIL_TO=<< pipeline.parameters.emailTo >>" >> .env
            fi
      - run:
          name: Build package
          command: |
            npm run build
      - run:
          name: Create build template
          command: |
            if ! [[ -z "<< pipeline.parameters.createTemplate >>" ]]
            then
              echo "Starting create build template process"
              npm run template
            else
              echo "Skipping create build template process"
            fi
      - store_artifacts:
          path: ./dist
          destination: dist/
    
  build_publish:
      docker:
          - image: circleci/node:14-browsers
      steps:
          - checkout
          - run:
                name: 'Check is CI Required'
                command: |
                    git log --format=oneline -n 1 $CIRCLE_SHA1 | tee commitmsg 
                    GIT_COMMIT_DESC=$(awk '{print $3}' commitmsg)
                    if ! [[ $GIT_COMMIT_DESC =~ ^(certify)$ ]];
                    then
                        echo $GIT_COMMIT_DESC
                        circleci-agent step halt
                    else
                        echo $GIT_COMMIT_DESC
                    fi

          - run:
                name: Authenticate npm
                command: |
                    echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

          - restore_cache:
                key: yarn-packages-{{ checksum "yarn.lock" }}
          - run:
                name: install-packages
                command: |
                    yarn install
          - save_cache:
                key: yarn-packages-{{ checksum "yarn.lock" }}
                paths:
                    - .yarn/cache
                    - .yarn/unplugged
          - run:
                name: clean online license related code
                command: |
                    if [ -e "src/onlineLicense" ]; then
                      rm -rf src/onlineLicense
                    fi
                    if [ -e "src/Config.ts" ]; then
                      rm src/Config.ts
                    fi
                    node ZUtils/preBuilds.js
          # - run:
          #       name: Build files
          #       command: |
          #           yarn build:packages

          # - run:
          #       name: Publish build
          #       command: |
          #           git config --global user.email "sathishkumarm@lumel.com"
          #           git config --global user.name "Sathish kumar"
          #           git checkout .
          #           yarn publish-packages 

          - run:
                name: Publish to certified
                command: | 
                      git log --format=oneline -n 1 $CIRCLE_SHA1 | tee commitmsg 
                      GIT_COMMIT_DESC=$(awk '{print $3}' commitmsg)
                      export COMMIT_MSG=$(cat commitmsg)
                      node ZUtils/commitToCertified.js
                      # if ! [[ $GIT_COMMIT_DESC =~ ^(npmupdate)$ ]];
                      # then
                      #   echo $GIT_COMMIT_DESC
                      #   circleci-agent step halt
                      # else
                      #   echo $GIT_COMMIT_DESC
                      # fi 
          # - run:
          #       name: Trigger version bump
          #       command: | 
          #           node triggerUpdate.js
          #           rm commitmsg
          #           git remote rm origin
          #           git remote add origin https://nsdevaraj:$GIT_TOKEN@github.com/visualbis/xviz.git
          #           git config --global user.email "devarajns@lumel.com"
          #           git config --global user.name "Devaraj NS"
          #           git add .
          #           git commit -m "chore(ver): bump"
          #           git push origin main
workflows:
  build_and_test:
    when: << pipeline.parameters.buildType >>
    jobs:
      - build
  build_to_certify:
    jobs:
      - build_publish
